# NOTE: update this with your service name
service: claim-backend-api

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-export-env

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  stage: ${opt:stage, self:provider.stage}

  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
 
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  environment: ${file(env.yml):${self:custom.stage}, file(env.yml):default}
  
provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  
  environment:
    tableName:
      Ref: ClaimTable
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem

      Resource:
        - "Fn::GetAtt": [ClaimTable, Arn]


functions:
  create:
    handler: functions/create.main
    events:
     - http: 
         path: claims
         method: post
         cors: true
         authorizer: aws_iam

  get:
    handler: functions/get.main
    events:
     - http:
         path: claims/{id}
         method: get
         cors: true
         authorizer: aws_iam
  
  list: 
    handler: functions/list.main
    events: 
     - http: 
         path: claims
         method: get
         cors: true
         authorizer: aws_iam
  
  update: 
    handler: functions/update.main
    events:  
     - http:  
         path: claims/{id}
         method: put
         cors: true
         authorizer: aws_iam

  delete:
    handler: functions/delete.main
    events:
     - http:
         path: claims/{id}
         method: delete
         cors: true
         authorizer: aws_iam

#create our resources with separate cloud formation temps
resources:
  #dynamodb
  - ${file(resources/dynamodb-table.yml)}
  # s3
  - ${file(resources/s3-bucket.yml)}
  # cognito
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}